imports:
    - { resource: ../config/default.yml }

framework:
    serializer:
        enabled: true

dreamlex_ticket:
    user_class: Dreamlex\TicketBundle\Tests\Functional\Bundle\TestBundle\Entity\User
    media_entity: Dreamlex\TicketBundle\Tests\Functional\Bundle\TestBundle\Entity\Media

security:
    firewalls:
        test:
            http_digest:
                secret: 'secret'
                realm: 'secure-api'
    providers:            # Required
            # Examples:
            my_in_memory_provider:
                memory:
                    users:
                        test-user:
                            password:           test-user
                            roles:              ROLE_USER
                        test-admin:
                            password:           test-admin
                            roles:              [ROLE_USER, ROLE_ADMIN]
    encoders:
            Symfony\Component\Security\Core\User\User: plaintext

    firewalls:
        main:
            pattern: ^/
            form_login: false
            http_basic:
                provider: memory
                realm: "DreamlexTicketBundle Test Suite"
            logout:       true
            anonymous:    true

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
doctrine:
    dbal:
          default_connection: default
          connections:
              default:
                  driver:   pdo_sqlite
                  path:     '%kernel.cache_dir%/db.sqlite'
                  charset:  UTF8
          types:
              json: Sonata\Doctrine\Types\JsonType
    orm:
            auto_generate_proxy_classes: "%kernel.debug%"
            naming_strategy: doctrine.orm.naming_strategy.underscore
            auto_mapping: true
            filters:
                softdeleteable:
                    class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter
                    enabled: true
            mappings:
                translatable:
                    type: annotation
                    alias: Gedmo
                    prefix: Gedmo\Translatable\Entity
                    # make sure vendor library location is correct
                    dir: "%kernel.root_dir%/../../../vendor/gedmo/doctrine-extensions/lib/Gedmo/Translatable/Entity"
                SonataClassificationBundle: ~

                FOSUserBundle: ~
                DreamlexTicketBundle:
                    type: annotation
                    prefix: Dreamlex\TicketBundle\Entity
                    dir: "%kernel.root_dir%/../../../Entity"
                TestBundle:
                    mapping: true
                    prefix: Dreamlex\TicketBundle\Tests\Functional\Bundle\TestBundle\Entity
                    type: annotation
                    dir: "%kernel.root_dir%/../Bundle/TestBundle/Entity"
#                ClassificationBundle:
#                    type: xml
#                    prefix: Dreamlex\TicketBundle\Tests\Functional\Bundle\ClassificationBundle\Entity
#                    dir: "%kernel.root_dir%/../Bundle/ClassificationBundle/Entity"


stof_doctrine_extensions:
    default_locale: ru
    translation_fallback: true
    orm:
        default:
            translatable:   true
            sortable:       true
            softdeleteable: true

sonata_media:
    class:
        media:  Dreamlex\TicketBundle\Tests\Functional\Bundle\TestBundle\Entity\Media
        category: Dreamlex\TicketBundle\Tests\Functional\Bundle\ClassificationBundle\Entity\Category
        gallery: Dreamlex\TicketBundle\Tests\Functional\Bundle\MediaBundle\Entity\Gallery
        gallery_has_media: Dreamlex\TicketBundle\Tests\Functional\Bundle\MediaBundle\Entity\GalleryHasMedia
    default_context: default
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        default:  # the default context is mandatory
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file
            formats:
                small: { width: 100 , quality: 70}
                big:   { width: 500 , quality: 70}
        ticket:
            providers:
               - sonata.media.provider.ticket_image
               - sonata.media.provider.file
            formats:
               small: { width: 100 , quality: 100}
               big:   { width: 1200 , quality: 100}


    cdn:
        server:
            path: /uploads/media # http://media.sonata-project.org/

    filesystem:
        local:
            directory:  "%kernel.root_dir%/../web/uploads/media"
            create:     false

sonata_translation:
    locales: [en, ru]
    default_locale: ru
    # here enable the types you need
    gedmo:
        enabled: true
    
sonata_classification:
    class:
        tag:          Dreamlex\TicketBundle\Tests\Functional\Bundle\ClassificationBundle\Entity\Tag
        category:     Dreamlex\TicketBundle\Tests\Functional\Bundle\ClassificationBundle\Entity\Category
        collection:   Dreamlex\TicketBundle\Tests\Functional\Bundle\ClassificationBundle\Entity\Collection
        context:      Dreamlex\TicketBundle\Tests\Functional\Bundle\ClassificationBundle\Entity\Context
        media:        Dreamlex\TicketBundle\Tests\Functional\Bundle\TestBundle\Entity\Media


fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Dreamlex\TicketBundle\Tests\Functional\Bundle\TestBundle\Entity\User
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

        # //TODO create config for fos_user -- nedded for LoadUsersFixture